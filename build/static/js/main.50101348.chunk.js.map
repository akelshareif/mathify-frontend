{"version":3,"sources":["rootReducer.js","store.js","MathifyAPI.js","actions.js","components/NavBar/NavBar.js","components/AuthPage/AuthForm.js","components/AuthPage/AuthPage.js","components/AuthPage/Login.js","components/Dashboard/Dashboard.js","components/Game/GameConfig.js","components/Game/Prompt.js","components/Game/NumberCard.js","components/Game/QuestionChoices.js","components/Game/Timer.js","components/Game/StatusItem.js","components/Game/StatusBar.js","components/Game/Game.js","components/Game/GameStats.js","components/Game/GameOverStatus.js","components/Game/GameOver.js","components/Leaderboards/LeaderboardConfig.js","components/Leaderboards/Leaderboard.js","components/Routes.js","components/App.js","index.js"],"names":["INITIAL_STATE","token","currentGameID","currentScore","gameType","difficulty","undefined","duration","questionsAnswers","rootReducer","state","action","type","gameID","isCorrect","persistConfig","key","storage","stateReconciler","autoMergeLevel2","blacklist","persistedReducer","persistReducer","root","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistedStore","persistStore","MathifyAPI","endpoint","paramsOrData","verb","console","debug","axios","method","url","error","firstName","lastName","username","password","this","request","data","err","_token","localStorage","getItem","gameData","ans1","ans2","question","isHighScore","leaderboard","user","createNewGame","gameConfig","dispatch","a","newGame","createdNewGame","loadUser","_id","checkedAnswer","NavBar","history","useHistory","useDispatch","useState","isOpen","setIsOpen","Navbar","className","light","expand","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","Button","clear","push","AuthForm","formData","setFormData","isHidden","msg","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","register","hasOwnProperty","setItem","Card","CardBody","CardTitle","Alert","color","Form","onSubmit","Row","form","Col","md","FormGroup","Input","placeholder","onChange","bsSize","required","size","block","xs","AuthPage","style","fontSize","Login","authenticate","Dashboard","currUser","setCurrUser","useEffect","getCurrentUser","getUser","handleDelete","deleteCurrentUser","CardHeader","toLowerCase","gamesPlayed","length","Table","highScores","add","easy","medium","hard","subtract","multiply","divide","GameConfig","configData","setConfigData","config","Prompt","getOperationIcon","NumberCard","contents","setAnswer","answers","QuestionChoices","questionChoices","handleAnswer","handleAnswerSubmission","choices","map","choice","Timer","intervalID","useRef","useSelector","seconds","setSeconds","current","setInterval","s","clearInterval","StatusItem","itemText","itemData","StatusBar","score","questionNumber","totalQuestions","Game","currentQuestionIndex","turnData","setTurnData","answer","checkAnswer","GameStats","striped","GameOverStatus","title","message","numQuestions","GameOver","highScoreBool","setHighScoreBool","checkHighScore","isNewHighScore","LeaderboardConfig","leaderboardConfig","setLeaderboardConfig","Leaderboard","useParams","leaderboardData","setLeaderboardData","getLeaderboard","responsive","idx","highScore","Routes","exact","path","App","ReactDOM","render","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.50101348.chunk.js","sourcesContent":["const INITIAL_STATE = {\n    token: '',\n    currentGameID: '',\n    currentScore: 0,\n    gameType: '',\n    difficulty: undefined,\n    duration: undefined,\n    questionsAnswers: [],\n};\n\nconst rootReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'ADD_USER':\n            return {\n                ...state,\n                token: action.token,\n            };\n\n        case 'ADD_GAME':\n            return {\n                ...state,\n                currentGameID: action.gameID,\n                gameType: action.gameType,\n                difficulty: action.difficulty,\n                duration: action.duration,\n                questionsAnswers: action.questionsAnswers,\n            };\n\n        case 'CHECK_ANSWER':\n            if (action.isCorrect) {\n                return {\n                    ...state,\n                    currentScore: state.currentScore + 1,\n                };\n            } else {\n                return state;\n            }\n\n        case 'RESET_GAME':\n            return {\n                ...INITIAL_STATE,\n                token: state.token,\n            };\n\n        case 'RESET':\n            return INITIAL_STATE;\n\n        default:\n            return state;\n    }\n};\n\nexport default rootReducer;\n","import { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport thunk from 'redux-thunk';\nimport root from './rootReducer';\nimport { createStore, applyMiddleware } from 'redux';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    stateReconciler: autoMergeLevel2,\n    blacklist: ['currentScore'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, root);\n\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\nexport const persistedStore = persistStore(store);\n","import axios from 'axios';\n\nclass MathifyAPI {\n    static async request(endpoint, paramsOrData = {}, verb = 'get') {\n        console.debug('API Call:', endpoint, paramsOrData, verb);\n\n        try {\n            return await axios({\n                method: verb,\n                url: `http://localhost:3001/${endpoint}`,\n                [verb === 'get' ? 'params' : 'data']: paramsOrData,\n            });\n            // axios sends query string data via the \"params\" key,\n            // and request body data via the \"data\" key,\n            // so the key we need depends on the HTTP verb\n        } catch (e) {\n            console.error('API Error:', e);\n        }\n    }\n\n    static async register({ firstName, lastName, username, password }) {\n        try {\n            const { data } = await this.request('auth/register', { firstName, lastName, username, password }, 'post');\n\n            return data.token;\n        } catch (e) {\n            return { err: 'Username is already taken' };\n        }\n    }\n\n    static async authenticate({ username, password }) {\n        try {\n            const { data } = await this.request('auth/login', { username, password }, 'post');\n\n            return data.token;\n        } catch (e) {\n            return { err: 'Incorrect Username or Password' };\n        }\n    }\n\n    static async newGame({ difficulty, gameType }) {\n        const gameData = await this.request(\n            'mathify/new',\n            { difficulty, gameType, _token: localStorage.getItem('_token') },\n            'post'\n        );\n        return gameData.data;\n    }\n\n    static async checkAnswer({ gameType, ans1, ans2, question }) {\n        const isCorrect = await this.request(\n            'mathify/answer',\n            { gameType, ans1, ans2, question, _token: localStorage.getItem('_token') },\n            'post'\n        );\n        return isCorrect.data;\n    }\n\n    static async checkHighScore(gameID, currentScore) {\n        const isHighScore = await this.request(\n            'mathify/gameover',\n            { gameID, currentScore, _token: localStorage.getItem('_token') },\n            'post'\n        );\n        return isHighScore.data;\n    }\n\n    static async getLeaderboard({ gameType, difficulty }) {\n        const leaderboard = await this.request(\n            'mathify/leaderboard',\n            { gameType, difficulty, _token: localStorage.getItem('_token') },\n            'post'\n        );\n        return leaderboard.data;\n    }\n\n    static async getCurrentUser(token) {\n        const user = await this.request('mathify/user', { _token: token });\n        return user.data;\n    }\n\n    static async deleteCurrentUser(token) {\n        try {\n            await this.request('mathify/delete', { _token: token }, 'post');\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n\nexport default MathifyAPI;\n","import MathifyAPI from './MathifyAPI';\n\n// ********* Thunk action creators ***************\nexport const createNewGame = (gameConfig) => {\n    return async (dispatch) => {\n        try {\n            const gameData = await MathifyAPI.newGame(gameConfig);\n            dispatch(createdNewGame(gameData));\n        } catch (e) {\n            console.error('API ERROR: ', e);\n        }\n    };\n};\n\nexport const checkAnswer = (data) => {\n    return async (dispatch) => {\n        try {\n            const { isCorrect } = await MathifyAPI.checkAnswer(data);\n            dispatch(checkedAnswer(isCorrect));\n        } catch (e) {\n            console.error('API ERROR: ', e);\n        }\n    };\n};\n\n// ********* Basic action creators ***************\nexport const loadUser = (token) => {\n    return {\n        type: 'ADD_USER',\n        token,\n    };\n};\n\nexport const resetGame = () => {\n    return {\n        type: 'RESET_GAME',\n    };\n};\n\nexport const clearData = () => {\n    return {\n        type: 'RESET',\n    };\n};\n\nconst createdNewGame = (gameData) => {\n    return {\n        type: 'ADD_GAME',\n        gameID: gameData._id,\n        gameType: gameData.gameType,\n        difficulty: gameData.difficulty,\n        duration: gameData.duration,\n        questionsAnswers: gameData.questionsAnswers,\n    };\n};\n\nconst checkedAnswer = (isCorrect) => {\n    return {\n        type: 'CHECK_ANSWER',\n        isCorrect,\n    };\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n    Container,\n    Button,\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport { clearData } from '../../actions';\nimport './NavBar.css';\n\nconst NavBar = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    const handleLogout = () => {\n        localStorage.clear();\n        dispatch(clearData());\n        history.push('/');\n    };\n\n    return (\n        <Navbar className=\"NavBar\" light expand=\"md\">\n            <Container>\n                <NavbarBrand tag={Link} to=\"/dashboard\">\n                    Mathify\n                </NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink tag={Link} to=\"/game/new\">\n                                New Game\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink tag={Link} to=\"/leaderboards\">\n                                Leaderboards\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <Nav navbar>\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle nav caret>\n                                <i className=\"far fa-user\"></i>\n                            </DropdownToggle>\n                            <DropdownMenu className=\"text-center\" right>\n                                <DropdownItem tag={Link} to=\"/dashboard\">\n                                    Dashboard\n                                </DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem tag={Button} className=\"text-danger\" onClick={handleLogout}>\n                                    Logout\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Collapse>\n            </Container>\n        </Navbar>\n    );\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Alert, Form, FormGroup, Input, Col, Row, Button, Card, CardTitle, CardBody } from 'reactstrap';\nimport MathifyAPI from '../../MathifyAPI';\nimport { loadUser } from '../../actions';\n\nconst AuthForm = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: '',\n    });\n\n    const [error, setError] = useState({\n        isHidden: false,\n        msg: '',\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((formData) => ({\n            ...formData,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const data = await MathifyAPI.register(formData);\n        if (data.hasOwnProperty('err')) {\n            setError((err) => ({\n                isHidden: !err.isHidden,\n                msg: data.err,\n            }));\n        } else {\n            localStorage.setItem('_token', data);\n            dispatch(loadUser(data));\n            history.push('/dashboard');\n        }\n    };\n\n    return (\n        <Card className=\"mb-3\">\n            <CardBody>\n                <CardTitle tag=\"h3\" className=\"text-center mb-3\">\n                    Sign Up\n                </CardTitle>\n                {error.isHidden ? (\n                    <Alert color=\"danger\" className=\"text-center\">\n                        {error.msg}\n                    </Alert>\n                ) : null}\n                <Form className=\"mb-2\" onSubmit={handleSubmit}>\n                    <Row form>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    placeholder=\"First Name\"\n                                    onChange={handleChange}\n                                    bsSize=\"lg\"\n                                    required\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    name=\"lastName\"\n                                    placeholder=\"Last Name\"\n                                    onChange={handleChange}\n                                    bsSize=\"lg\"\n                                    required\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row form>\n                        <Col>\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    name=\"username\"\n                                    placeholder=\"Username\"\n                                    onChange={handleChange}\n                                    bsSize=\"lg\"\n                                    required\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row form>\n                        <Col>\n                            <FormGroup>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange={handleChange}\n                                    bsSize=\"lg\"\n                                    required\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Row form>\n                        <Col>\n                            <Button type=\"submit\" color=\"success\" size=\"lg\" block>\n                                Create Account\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n                <Row className=\"mb-2\">\n                    <Col>\n                        <hr />\n                    </Col>\n                    <Col xs=\"6\" className=\"text-center text-muted\">\n                        <small>Have An Account?</small>\n                    </Col>\n                    <Col>\n                        <hr />\n                    </Col>\n                </Row>\n                <Button tag={Link} to=\"/login\" className=\"text-center\" color=\"info\" size=\"lg\" block>\n                    Login\n                </Button>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport AuthForm from './AuthForm';\n\nconst AuthPage = () => {\n    return (\n        <Row className=\"justify-content-center mt-3\">\n            <Col md=\"8\">\n                <div className=\"text-center mt-3\">\n                    <i className=\"fas fa-calculator\" style={{ fontSize: '4rem' }}></i>\n                </div>\n                <h4 className=\"text-center my-3\">A Fun, Fast-Paced Number Game</h4>\n                <AuthForm />\n            </Col>\n        </Row>\n    );\n};\n\nexport default AuthPage;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Row, Col, Alert, Card, CardTitle, CardBody, Form, FormGroup, Input, Button } from 'reactstrap';\nimport MathifyAPI from '../../MathifyAPI';\nimport { loadUser } from '../../actions';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [formData, setFormData] = useState({\n        username: '',\n        password: '',\n    });\n\n    const [error, setError] = useState({\n        isHidden: false,\n        msg: '',\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((formData) => ({\n            ...formData,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const data = await MathifyAPI.authenticate(formData);\n        if (data.hasOwnProperty('err')) {\n            setError((err) => ({\n                isHidden: !err.isHidden,\n                msg: data.err,\n            }));\n        } else {\n            localStorage.setItem('_token', data);\n            dispatch(loadUser(data));\n            history.push('/dashboard');\n        }\n    };\n\n    return (\n        <div>\n            <Row className=\"justify-content-center mt-3\">\n                <Col md=\"8\">\n                    <div className=\"text-center mt-3\">\n                        <i className=\"fas fa-calculator\" style={{ fontSize: '4rem' }}></i>\n                    </div>\n                    <h4 className=\"text-center my-3\">A Fun, Fast-Paced Number Game</h4>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center my-2\">\n                <Col md=\"6\">\n                    <Card>\n                        <CardBody>\n                            <CardTitle tag=\"h3\" className=\"text-center mb-3\">\n                                Login\n                            </CardTitle>\n                            {error.isHidden ? (\n                                <Alert color=\"danger\" className=\"text-center\">\n                                    {error.msg}\n                                </Alert>\n                            ) : null}\n                            <Form onSubmit={handleSubmit}>\n                                <FormGroup>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"username\"\n                                        placeholder=\"Username\"\n                                        onChange={handleChange}\n                                        bsSize=\"lg\"\n                                        required\n                                    />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        placeholder=\"Password\"\n                                        onChange={handleChange}\n                                        bsSize=\"lg\"\n                                        required\n                                    />\n                                </FormGroup>\n                                <Button type=\"submit\" color=\"success\" size=\"lg\" block>\n                                    Login\n                                </Button>\n                            </Form>\n                            <Row className=\"my-2\">\n                                <Col>\n                                    <hr />\n                                </Col>\n                                <Col xs=\"6\" className=\"text-center text-muted\">\n                                    <small>Don't Have An Account?</small>\n                                </Col>\n                                <Col>\n                                    <hr />\n                                </Col>\n                            </Row>\n                            <Button tag={Link} to=\"/\" className=\"text-center\" color=\"info\" size=\"lg\" block>\n                                Sign Up\n                            </Button>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Table, Card, CardHeader, CardBody, Button } from 'reactstrap';\nimport MathifyAPI from '../../MathifyAPI';\nimport { clearData } from '../../actions';\n\nconst Dashboard = ({ token }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [currUser, setCurrUser] = useState(undefined);\n\n    useEffect(() => {\n        const getUser = async () => {\n            const user = await MathifyAPI.getCurrentUser(token);\n            setCurrUser(user.user);\n        };\n\n        getUser();\n    }, [token]);\n\n    const handleDelete = async () => {\n        await MathifyAPI.deleteCurrentUser(token);\n        dispatch(clearData());\n        history.push('/');\n    };\n\n    if (!token || !currUser) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <Row className=\"justify-content-center my-3\">\n                <Col md=\"8\">\n                    <Card>\n                        <CardHeader>\n                            <Row className=\"justify-content-between\">\n                                <Col md=\"5\" className=\"align-content-center\">\n                                    <h4 className=\"mt-1\">Account Information</h4>\n                                </Col>\n                                <Col md=\"4\">\n                                    <Button color=\"danger\" onClick={handleDelete} block>\n                                        Delete Account\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </CardHeader>\n                        <CardBody>\n                            <Row className=\"justify-content-center\">\n                                <Col>\n                                    <b>Name</b>\n                                </Col>\n                                <Col>\n                                    <p className=\"text-capitalize\">{`${currUser.firstName.toLowerCase()} ${currUser.lastName.toLowerCase()}`}</p>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"justify-content-center\">\n                                <Col>\n                                    <b>Username</b>\n                                </Col>\n                                <Col>\n                                    <p>{currUser.username}</p>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"justify-content-center\">\n                                <Col>\n                                    <b>Total Games Played</b>\n                                </Col>\n                                <Col>\n                                    <p>{currUser.gamesPlayed.length}</p>\n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center my-3\">\n                <Col md=\"8\">\n                    <Card>\n                        <CardHeader>\n                            <h4 className=\"mt-1\">Your Game Stats</h4>\n                        </CardHeader>\n                        <Table size=\"sm\" className=\"text-center\">\n                            <thead>\n                                <tr>\n                                    <th>Game Type</th>\n                                    <th>Difficulty</th>\n                                    <th>Highest Score</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr className=\"table-primary\">\n                                    <td>Add</td>\n                                    <td>Easy</td>\n                                    <td>{currUser.highScores.add.easy || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-primary\">\n                                    <td>Add</td>\n                                    <td>Medium</td>\n                                    <td>{currUser.highScores.add.medium || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-primary\">\n                                    <td>Add</td>\n                                    <td>Hard</td>\n                                    <td>{currUser.highScores.add.hard || 'Not Played'}</td>\n                                </tr>\n\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n\n                                <tr className=\"table-info\">\n                                    <td>Subtract</td>\n                                    <td>Easy</td>\n                                    <td>{currUser.highScores.subtract.easy || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-info\">\n                                    <td>Subtract</td>\n                                    <td>Medium</td>\n                                    <td>{currUser.highScores.subtract.medium || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-info\">\n                                    <td>Subtract</td>\n                                    <td>Hard</td>\n                                    <td>{currUser.highScores.subtract.hard || 'Not Played'}</td>\n                                </tr>\n\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n\n                                <tr className=\"table-success\">\n                                    <td>Multiply</td>\n                                    <td>Easy</td>\n                                    <td>{currUser.highScores.multiply.easy || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-success\">\n                                    <td>Multiply</td>\n                                    <td>Medium</td>\n                                    <td>{currUser.highScores.multiply.medium || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-success\">\n                                    <td>Multiply</td>\n                                    <td>Hard</td>\n                                    <td>{currUser.highScores.multiply.hard || 'Not Played'}</td>\n                                </tr>\n\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td></td>\n                                </tr>\n\n                                <tr className=\"table-warning\">\n                                    <td>Divide</td>\n                                    <td>Easy</td>\n                                    <td>{currUser.highScores.divide.easy || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-warning\">\n                                    <td>Divide</td>\n                                    <td>Medium</td>\n                                    <td>{currUser.highScores.divide.medium || 'Not Played'}</td>\n                                </tr>\n                                <tr className=\"table-warning\">\n                                    <td>Divide</td>\n                                    <td>Hard</td>\n                                    <td>{currUser.highScores.divide.hard || 'Not Played'}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Input, Button } from 'reactstrap';\nimport { createNewGame, resetGame } from '../../actions';\n\nconst GameConfig = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [configData, setConfigData] = useState({\n        difficulty: 'easy',\n        gameType: 'add',\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n        setConfigData((config) => ({\n            ...config,\n            [name]: value.toLowerCase(),\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        dispatch(resetGame());\n        dispatch(createNewGame(configData));\n        history.push('/game/play');\n    };\n\n    return (\n        <div className=\"mt-4\">\n            <div className=\"text-center my-3\">\n                <i className=\"fas fa-calculator\" style={{ fontSize: '4rem' }}></i>\n            </div>\n            <Row className=\"justify-content-center\">\n                <Col md=\"8\">\n                    <Card>\n                        <CardBody>\n                            <Form onSubmit={handleSubmit}>\n                                <Row className=\"justify-content-center text-center mt-2\" form>\n                                    <Col>\n                                        <h4>Select A Game Type</h4>\n                                    </Col>\n                                </Row>\n                                <Row form>\n                                    <Col>\n                                        <FormGroup>\n                                            <Input type=\"select\" name=\"gameType\" bsSize=\"lg\" onChange={handleChange}>\n                                                <option>Add</option>\n                                                <option>Subtract</option>\n                                                <option>Multiply</option>\n                                                <option>Divide</option>\n                                            </Input>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Row className=\"justify-content-center text-center mb-2\" form>\n                                    <Col>\n                                        <h4>Select A Difficulty Level</h4>\n                                    </Col>\n                                </Row>\n                                <Row form>\n                                    <Col>\n                                        <FormGroup>\n                                            <Input type=\"select\" name=\"difficulty\" bsSize=\"lg\" onChange={handleChange}>\n                                                <option>Easy</option>\n                                                <option>Medium</option>\n                                                <option>Hard</option>\n                                            </Input>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n\n                                <Button className=\"mt-2\" type=\"submit\" size=\"lg\" block>\n                                    Start Game\n                                </Button>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default GameConfig;\n","import React from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\n\nconst Prompt = ({ gameType, question }) => {\n    const getOperationIcon = () => {\n        switch (gameType) {\n            case 'add':\n                return <i className=\"fas fa-plus align-middle\"></i>;\n            case 'subtract':\n                return <i className=\"fas fa-minus align-middle\"></i>;\n            case 'multiply':\n                return <i className=\"fas fa-times align-middle\"></i>;\n            case 'divide':\n                return <i className=\"fas fa-divide align-middle\"></i>;\n            default:\n                return 'No Game Type Selected';\n        }\n    };\n\n    return (\n        <Card>\n            <CardBody>\n                <Row className=\"justify-content-center text-center\">\n                    <Col md=\"3\">\n                        <h1>? &nbsp; {getOperationIcon()} &nbsp; ?</h1>\n                    </Col>\n                    <Col md=\"1\">\n                        <h1>=</h1>\n                    </Col>\n                    <Col md=\"3\">\n                        {question.length > 1 ? (\n                            <h1>\n                                {question[0]} &nbsp; r &nbsp; {question[1]}\n                            </h1>\n                        ) : (\n                            <h1>{question[0]}</h1>\n                        )}\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default Prompt;\n","import React from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\n\nconst NumberCard = ({ contents, setAnswer, answers }) => {\n    const handleClick = () => {\n        setAnswer(contents);\n    };\n\n    return (\n        <Card\n            className=\"mb-2\"\n            onClick={handleClick}\n            color={answers.ans1 === contents || answers.ans2 === contents ? 'success' : ''}\n        >\n            <CardBody>\n                <Row className=\"justify-content-center\">\n                    <Col>\n                        <h1\n                            className={`text-center ${\n                                answers.ans1 === contents || answers.ans2 === contents ? 'text-light' : ''\n                            }`}\n                        >\n                            {contents}\n                        </h1>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default NumberCard;\n","import React from 'react';\nimport { Row, Col, Button } from 'reactstrap';\nimport Prompt from './Prompt';\nimport NumberCard from './NumberCard';\n\nconst QuestionChoices = ({ gameType, questionChoices, handleAnswer, handleAnswerSubmission, answers }) => {\n    if (!questionChoices) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"my-4\">\n            <Row>\n                <Col>\n                    <Prompt gameType={gameType} question={questionChoices.question} />\n                </Col>\n            </Row>\n            <hr className=\"my-4\" />\n\n            <Row className=\"justify-content-center\">\n                {questionChoices.choices.map((choice) => (\n                    <Col key={choice} xs=\"4\">\n                        <NumberCard contents={choice} setAnswer={handleAnswer} answers={answers} />\n                    </Col>\n                ))}\n            </Row>\n\n            {answers.ans1 >= 0 && answers.ans2 >= 0 ? (\n                <Row className=\"justify-content-center mt-4\">\n                    <Col md=\"8\">\n                        <Button size=\"lg\" color=\"info\" onClick={handleAnswerSubmission} block>\n                            Submit\n                        </Button>\n                    </Col>\n                </Row>\n            ) : null}\n        </div>\n    );\n};\n\nexport default QuestionChoices;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col } from 'reactstrap';\n\nconst Timer = () => {\n    const intervalID = useRef();\n    const history = useHistory();\n    const duration = useSelector((state) => state.duration);\n\n    const [seconds, setSeconds] = useState();\n\n    // Initialize state timer\n    useEffect(() => {\n        setSeconds(duration);\n    }, [duration]);\n\n    // Handle countdown\n    useEffect(() => {\n        intervalID.current = setInterval(() => {\n            setSeconds((s) => s - 1);\n        }, 1000);\n\n        return () => clearInterval(intervalID.current);\n    }, []);\n\n    // Handle game over\n    useEffect(() => {\n        if (seconds === 0) {\n            clearInterval(intervalID.current);\n            history.push('/game/over');\n        }\n    }, [seconds, history]);\n\n    return (\n        <div className=\"mt-2\">\n            <Row className=\"text-center\">\n                <Col>\n                    <b style={{ fontSize: '1.3rem' }}>Timer </b>\n                </Col>\n            </Row>\n            <Row className=\"text-center\">\n                <Col>\n                    <p style={{ fontSize: '1.2rem' }}>{seconds}s</p>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Timer;\n","import React from 'react';\nimport { Col } from 'reactstrap';\n\nconst StatusItem = ({ itemText, itemData }) => {\n    return (\n        <Col xs=\"3\">\n            <div className=\"text-center\">\n                <b>{itemText}</b>\n            </div>\n            <div className=\"text-center\">\n                <span>{itemData}</span>\n            </div>\n        </Col>\n    );\n};\n\nexport default StatusItem;\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport StatusItem from './StatusItem';\n\nconst StatusBar = ({ score, questionNumber, totalQuestions }) => {\n    return (\n        <div>\n            <Row className=\"justify-content-between\">\n                <StatusItem itemText=\"Score\" itemData={score} />\n                <StatusItem itemText=\"Question\" itemData={`${questionNumber} of ${totalQuestions}`} />\n            </Row>\n        </div>\n    );\n};\n\nexport default StatusBar;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport QuestionChoices from './QuestionChoices';\nimport Timer from './Timer';\nimport StatusBar from './StatusBar';\nimport { checkAnswer } from '../../actions';\n\nconst Game = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // Grab game data from redux store\n    const gameType = useSelector((state) => state.gameType);\n    const currentScore = useSelector((state) => state.currentScore);\n    const questionsAnswers = useSelector((state) => state.questionsAnswers);\n\n    // Initialize turn data\n    const [turnData, setTurnData] = useState({\n        currentQuestionIndex: 0,\n        ans1: undefined,\n        ans2: undefined,\n    });\n\n    const handleAnswer = (answer) => {\n        // Update answers if selected/deselected\n        if (answer === turnData.ans1) {\n            setTurnData((data) => ({\n                ...data,\n                ans1: undefined,\n            }));\n        } else if (answer === turnData.ans2) {\n            setTurnData((data) => ({\n                ...data,\n                ans2: undefined,\n            }));\n        } else {\n            // Set initial answers\n            if (!turnData.ans1) {\n                setTurnData((data) => ({\n                    ...data,\n                    ans1: answer,\n                }));\n            } else if (!turnData.ans2) {\n                setTurnData((data) => ({\n                    ...data,\n                    ans2: answer,\n                }));\n            }\n        }\n    };\n\n    const handleAnswerSubmission = () => {\n        // Update game score\n        dispatch(\n            checkAnswer({\n                gameType,\n                ans1: turnData.ans1,\n                ans2: turnData.ans2,\n                question: questionsAnswers[turnData.currentQuestionIndex].question,\n            })\n        );\n\n        // Update current question index\n        if (turnData.currentQuestionIndex < questionsAnswers.length - 1) {\n            setTurnData({\n                currentQuestionIndex: turnData.currentQuestionIndex + 1,\n                ans1: undefined,\n                ans2: undefined,\n            });\n        } else {\n            // game over\n            history.push('/game/over');\n        }\n    };\n\n    return (\n        <div>\n            <Timer />\n            <QuestionChoices\n                gameType={gameType}\n                questionChoices={questionsAnswers[turnData.currentQuestionIndex]}\n                handleAnswer={handleAnswer}\n                handleAnswerSubmission={handleAnswerSubmission}\n                answers={{ ans1: turnData.ans1, ans2: turnData.ans2 }}\n            />\n            <StatusBar\n                score={currentScore}\n                questionNumber={turnData.currentQuestionIndex + 1}\n                totalQuestions={questionsAnswers.length}\n            />\n        </div>\n    );\n};\n\nexport default Game;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Table } from 'reactstrap';\n\nconst GameStats = () => {\n    const gameType = useSelector((state) => state.gameType);\n    const difficulty = useSelector((state) => state.difficulty);\n\n    return (\n        <Table className=\"my-3\" striped>\n            <thead>\n                <tr>\n                    <th>Game Type</th>\n                    <th>Difficulty</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td className=\"text-capitalize\">{gameType}</td>\n                    <td className=\"text-capitalize\">{difficulty}</td>\n                </tr>\n            </tbody>\n        </Table>\n    );\n};\n\nexport default GameStats;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Button } from 'reactstrap';\nimport GameStats from './GameStats';\n\nconst GameOverStatus = ({ title, message, currentScore, numQuestions }) => {\n    return (\n        <div className=\"text-center\">\n            <h1 className=\"display-3 my-3\">{title}</h1>\n            <Card>\n                <CardBody>\n                    <h3 className=\"mb-2\">{message}</h3>\n                    <h3 className=\"mb-4\">\n                        You scored {currentScore} out of {numQuestions}!\n                    </h3>\n                    <GameStats />\n                    <Row>\n                        <Col md=\"6\" className=\"mb-3\">\n                            <Button tag={Link} to=\"/game/new\" size=\"lg\" color=\"success\" block>\n                                Start New Game\n                            </Button>\n                        </Col>\n                        <Col md=\"6\" className=\"mb-3\">\n                            <Button tag={Link} to=\"/leaderboards\" size=\"lg\" color=\"info\" block>\n                                See Leaderboards\n                            </Button>\n                        </Col>\n                    </Row>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default GameOverStatus;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport MathifyAPI from '../../MathifyAPI';\nimport GameOverStatus from './GameOverStatus';\n\nconst GameOver = () => {\n    const [highScoreBool, setHighScoreBool] = useState(undefined);\n\n    const gameID = useSelector((state) => state.currentGameID);\n    const currentScore = useSelector((state) => state.currentScore);\n    const numQuestions = useSelector((state) => state.questionsAnswers.length);\n\n    // Checks if currentScore is a new high score and sets it on state\n    useEffect(() => {\n        const checkHighScore = async () => {\n            const { isNewHighScore } = await MathifyAPI.checkHighScore(gameID, currentScore);\n            setHighScoreBool(isNewHighScore);\n        };\n        checkHighScore();\n    }, [gameID, currentScore]);\n\n    // If new high score, congratualte user, else show regular game over\n    return (\n        <div>\n            {highScoreBool ? (\n                <GameOverStatus\n                    title=\"New High Score\"\n                    message=\"Congratulations\"\n                    currentScore={currentScore}\n                    numQuestions={numQuestions}\n                />\n            ) : (\n                <GameOverStatus title=\"Game Over\" currentScore={currentScore} numQuestions={numQuestions} />\n            )}\n        </div>\n    );\n};\n\nexport default GameOver;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Input, Button } from 'reactstrap';\n\nconst LeaderboardConfig = () => {\n    const history = useHistory();\n\n    const [leaderboardConfig, setLeaderboardConfig] = useState({\n        difficulty: 'easy',\n        gameType: 'add',\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n        setLeaderboardConfig((config) => ({\n            ...config,\n            [name]: value.toLowerCase(),\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        history.push(`/leaderboards/${leaderboardConfig.gameType}/${leaderboardConfig.difficulty}`);\n    };\n\n    return (\n        <div className=\"mt-4\">\n            <div className=\"text-center my-3\">\n                <i className=\"far fa-star\" style={{ fontSize: '4rem' }}></i>\n                <h2 className=\"my-3\">Select A Leaderboard</h2>\n            </div>\n            <Row className=\"justify-content-center\">\n                <Col md=\"8\">\n                    <Card>\n                        <CardBody>\n                            <Form onSubmit={handleSubmit}>\n                                <Row className=\"justify-content-center text-center mt-2\" form>\n                                    <Col>\n                                        <h4>Select A Game Type</h4>\n                                    </Col>\n                                </Row>\n                                <Row form>\n                                    <Col>\n                                        <FormGroup>\n                                            <Input type=\"select\" name=\"gameType\" bsSize=\"lg\" onChange={handleChange}>\n                                                <option>Add</option>\n                                                <option>Subtract</option>\n                                                <option>Multiply</option>\n                                                <option>Divide</option>\n                                            </Input>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"justify-content-center text-center mb-2\" form>\n                                    <Col>\n                                        <h4>Select A Difficulty Level</h4>\n                                    </Col>\n                                </Row>\n                                <Row form>\n                                    <Col>\n                                        <FormGroup>\n                                            <Input type=\"select\" name=\"difficulty\" bsSize=\"lg\" onChange={handleChange}>\n                                                <option>Easy</option>\n                                                <option>Medium</option>\n                                                <option>Hard</option>\n                                            </Input>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n\n                                <Button className=\"mt-2\" type=\"submit\" size=\"lg\" color=\"info\" block>\n                                    Load Leaderboard\n                                </Button>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default LeaderboardConfig;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Row, Col, Card, CardTitle, CardBody, Table, Button } from 'reactstrap';\nimport MathifyAPI from '../../MathifyAPI';\n\nconst Leaderboard = () => {\n    const { gameType, difficulty } = useParams();\n    const [leaderboardData, setLeaderboardData] = useState(undefined);\n\n    useEffect(() => {\n        const getLeaderboard = async () => {\n            const { leaderboard } = await MathifyAPI.getLeaderboard({ gameType, difficulty });\n            setLeaderboardData(leaderboard);\n        };\n        getLeaderboard();\n    }, [gameType, difficulty]);\n\n    if (!leaderboardData) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Card className=\"text-center my-3\">\n            <CardBody>\n                <CardTitle tag=\"h1\" className=\"text-center text-capitalize my-2\">\n                    {gameType} {difficulty} Leaderboard\n                </CardTitle>\n                {leaderboardData.length > 0 ? (\n                    <Table striped responsive className=\"my-4\">\n                        <thead>\n                            <tr>\n                                <th>Position</th>\n                                <th>Username</th>\n                                <th>Score</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {leaderboardData.map((user, idx) => (\n                                <tr key={user.username}>\n                                    <td>{idx + 1}</td>\n                                    <td>{user.username}</td>\n                                    <td>{user.highScore}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                ) : (\n                    <div>\n                        <h4 className=\"my-4 text-\">No Scores Yet!</h4>\n                    </div>\n                )}\n\n                <Row className=\"justify-content-center mt-3\">\n                    <Col md=\"5\" className=\"mb-2\">\n                        <Button tag={Link} to=\"/game/new\" color=\"success\" size=\"lg\" block>\n                            Start New Game\n                        </Button>\n                    </Col>\n                    <Col md=\"5\" className=\"mb-2\">\n                        <Button tag={Link} to=\"/leaderboards\" color=\"info\" size=\"lg\" block>\n                            Select New Leaderboard\n                        </Button>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default Leaderboard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport NavBar from './NavBar/NavBar';\nimport AuthPage from './AuthPage/AuthPage';\nimport Login from './AuthPage/Login';\nimport Dashboard from './Dashboard/Dashboard';\nimport GameConfig from './Game/GameConfig';\nimport Game from './Game/Game';\nimport GameOver from './Game/GameOver';\nimport LeaderboardConfig from './Leaderboards/LeaderboardConfig';\nimport Leaderboard from './Leaderboards/Leaderboard';\n\nconst Routes = () => {\n    const token = useSelector((state) => state.token);\n\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Container>\n                    <AuthPage />\n                </Container>\n            </Route>\n\n            <Route exact path=\"/login\">\n                <Container>\n                    <Login />\n                </Container>\n            </Route>\n\n            {token ? (\n                <>\n                    <Route exact path=\"/dashboard\">\n                        <NavBar />\n                        <Container>\n                            <Dashboard token={token} />\n                        </Container>\n                    </Route>\n\n                    <Route exact path=\"/game/new\">\n                        <NavBar />\n                        <Container>\n                            <GameConfig />\n                        </Container>\n                    </Route>\n\n                    <Route exact path=\"/game/play\">\n                        <NavBar />\n                        <Container>\n                            <Game />\n                        </Container>\n                    </Route>\n\n                    <Route exact path=\"/game/over\">\n                        <NavBar />\n                        <Container>\n                            <GameOver />\n                        </Container>\n                    </Route>\n\n                    <Route exact path=\"/leaderboards\">\n                        <NavBar />\n                        <Container>\n                            <LeaderboardConfig />\n                        </Container>\n                    </Route>\n\n                    <Route exact path=\"/leaderboards/:gameType/:difficulty\">\n                        <NavBar />\n                        <Container>\n                            <Leaderboard />\n                        </Container>\n                    </Route>\n                </>\n            ) : null}\n\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nconst App = () => {\n    return (\n        <div>\n            <BrowserRouter>\n                <Routes />\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistedStore } from './store';\n\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistedStore}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}